#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Reviews and Suggestions
  description: JavaScript + MySQL
  license:
    name: Software Architecture 2018-II
host: 192.168.0.101:3003 
#basePath: 
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /reviews:
    get:
      summary: Returns all reviews
      operationId: getAllReviews
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/getAllReviews'
        '500':
          description: Internal Server Error
  
    post:
      summary: Creates a new review
      operationId: addReview
      parameters:
        - name: review
          in: body
          required: true
          description: Review Object
          schema:
            $ref: '#/definitions/addReview'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ErrorModel'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
            
  /reviews/{code}:  
    get:
      summary: Returns a review with the given code
      operationId: getReviewByCode
      parameters:
        - name: code
          in: path
          description: The code of the review to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Review'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'

        '500':
          description: Internal Server Error
    put:
      summary: Completely updates a existent review
      operationId: updateReview
      parameters:
        - name: code
          in: path
          description: Review id
          required: true
          type: integer
        - name: review
          in: body
          required: true
          description: Review Object
          schema:
            $ref: '#/definitions/updateReview'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'  
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          
    delete:
      summary: Deletes a review with the given code
      operationId: deleteReview
      parameters:
        - name: code
          in: path
          description: Review id
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'  
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error


  /suggestions:
    get:
      summary: Returns all suggestions
      operationId: getAllSuggestions
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/getAllSuggestions'
        '500':
          description: Internal Server Error
          
    post:
      summary: Creates a new Suggestion
      operationId: addSuggestion
      parameters:
        - name: suggestion
          in: body
          required: true
          description: Suggestion Object
          schema:
            $ref: '#/definitions/addSuggestion'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ErrorModel'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
  
            
  /suggestions/{code}:  
    get:
      summary: Returns a suggestion with the given code
      operationId: getSuggestionByCode
      parameters:
        - name: code
          in: path
          description: The code of the suggestion to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Suggestion'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          
    put:
      summary: Completely updates a existent suggestion
      operationId: updateSuggestion
      parameters:
        - name: code
          in: path
          description: Suggestion id
          required: true
          type: integer
        - name: suggestion
          in: body
          required: true
          description: Suggestion Object
          schema:
            $ref: '#/definitions/updateSuggestion'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'  
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          
    delete:
      summary: Deletes a suggestion with the given code
      operationId: deleteSuggestion
      parameters:
        - name: code
          in: path
          description: Suggestion id
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'  
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error


          
  /get-average/{code}:  
    get:
      summary: Returns the average grade value of the book with the given code
      operationId: getAverageValue
      parameters:
        - name: code
          in: path
          description: The code of the book to be used
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/AvgGrade'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

  /get-reviews/{code}:  
    get:
      summary: Returns all the reviews of the book with the given code
      operationId: getBookReviews
      parameters:
        - name: code
          in: path
          description: The code of the book to be used
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/getAllReviews'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

  /get-suggestions/{code}:  
    get:
      summary: Returns all the suggestions of the book with the given code
      operationId: getBookSuggestions
      parameters:
        - name: code
          in: path
          description: The code of the book to be used
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/getAllSuggestions'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  Review:
    type: object
    properties:
      review_id:
        type: integer
      book_id:
        type: integer
      user_id:
        type: integer
      creationdate:
        type: string
        format: date-time 
      review:
        type: string
      grade:
        type: integer
        minimum: 1
        maximum: 5
        
  Suggestion:
    type: object
    properties:
      sugggestion_id:
        type: integer
      book_id1:
        type: integer
      book_id2:
        type: integer
      reason:
        type: string
        
  AvgGrade:
    type: object
    properties:
      Avg:
        type: number
        
  getAllReviews:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Review'
  
  getAllSuggestions:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Suggestion'

  addReview:
    type: object
    properties:
      book_id:
        type: integer
      user_id:
        type: integer
      review:
        type: string
      grade:
        type: integer
        minimum: 1
        maximum: 5

  addSuggestion:
    type: object
    properties:
      book_id1:
        type: integer
      book_id2:
        type: integer
      reason:
        type: string

  updateReview:
    type: object
    properties:
      book_id:
        type: integer
      user_id:
        type: integer
      review:
        type: string
      grade:
        type: integer
        minimum: 1
        maximum: 5 
        
  updateSuggestion:
    type: object
    properties:
      book_id1:
        type: integer
      book_id2:
        type: integer
      reason:
        type: string

# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string

